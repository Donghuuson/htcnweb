<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Free Web tutorials">
    <meta name="keywords" content="html,CSS,XML,JavScrip">
    <meta name="author" content="Hege Refsnes">
    <title>bai 22_tuan3</title>
    <link rel="stylesheet" href="/21061491.css">
</head>
<Style>
    h1{
        position: fixed;
        top: 0px;
        left : 0px;
        width : 100%;
        coler: #ffffff;
        background-color: #666666;
        margin:0px;
        padding:10px;
        height:60px;
        z-index: 2;
    }
    div.nav{
        z-index: 1;
        position: absolute;
        top: 80px;
        left:0px;
        width: 100px;
        height: 300px;
        padding: 10px;
        background-color: #d6d6d6;
    }
   p.abstract{
    font-weight: bold;
   }
   div.nav:before{
    content: "Navigation";
    font-size: 18px;
    font-weight: bold;
   }
</Style>

<body>
    
    <h1>
        Cascading Stype Sheets
    </h1>
    <div>
        class="nav"><a href=" .. /tuan3.html">Exampless index</a>
    </div>
    <h2>
        CSS Positioning 
    </h2>
    <p>
        class=" abstract">
        <img class =" floatLeft" src =" images/background.gif" alt =" wrox logo">
        This article introduces the topic of laying out web pages in CSS using a combinatuion of positioning schemes.
    </p>
    <p>
       CSS allows you to use the three different positioning schemes to create complex layouts:
    </p>
   <ul>
    <li>Nomal flow </li>
    <li>Absolute positioning</li>
    <li>floating</li>
   </ul>
   <p>
    BY using a combination of these schemes youn do not need to resort to using tables to lay out your pages.
   </p>
</body>
